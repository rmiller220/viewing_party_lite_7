---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?query=The%20Matrix
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Content-Type:
      - application/json
      User-Agent:
      - Faraday v2.7.4
      Authorization:
      - Bearer <MOVIES_API_READ_ACCESS_TOKEN>
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 11 May 2023 17:35:38 GMT
      Server:
      - openresty
      Cache-Control:
      - public, max-age=26609
      X-Memc:
      - HIT
      X-Memc-Key:
      - f251a78d142582f39053fe7b40cc1c61
      X-Memc-Age:
      - '10174'
      X-Memc-Expires:
      - '12927'
      Etag:
      - W/"bc957b7a3488a1f7c9b2174c17c3135a"
      Vary:
      - Accept-Encoding
      - Origin
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 045f1e1f031241f3808c557a2b5d6b0a.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - 3ucrv4QUYaF-7SOVsLE3DkzgdOF9T_KVfgjo_fZhZQfgWy1WVwz6rQ==
      Age:
      - '1983'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 11 May 2023 18:08:41 GMT
recorded_with: VCR 6.1.0
