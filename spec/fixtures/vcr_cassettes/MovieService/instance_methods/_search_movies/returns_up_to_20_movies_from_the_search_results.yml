---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?query=The%20Matrix
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Content-Type:
      - application/json
      User-Agent:
      - Faraday v2.7.4
      Authorization:
      - Bearer <MOVIES_API_READ_ACCESS_TOKEN>
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Mon, 22 May 2023 19:43:04 GMT
      Server:
      - openresty
      Cache-Control:
      - public, max-age=28721
      X-Memc:
      - HIT
      X-Memc-Key:
      - f251a78d142582f39053fe7b40cc1c61
      X-Memc-Age:
      - '13292'
      X-Memc-Expires:
      - '8919'
      Etag:
      - W/"b0031298632844e96e9cccabef91108e"
      Vary:
      - Accept-Encoding
      - Origin
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 badefad2d1fb92bb4620df1ce11d8c92.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN52-P2
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - YUfX6yFtj7_9lCfyU8nD5QXL_RZzYhIQ1Mi3TyI2hFnV0B-dFMf4BA==
      Age:
      - '2'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 22 May 2023 19:43:06 GMT
recorded_with: VCR 6.1.0
