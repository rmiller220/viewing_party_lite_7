---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?query=The%20Matrix
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Content-Type:
      - application/json
      User-Agent:
      - Faraday v2.7.4
      Authorization:
      - Bearer <MOVIES_API_READ_ACCESS_TOKEN>
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Fri, 12 May 2023 19:19:45 GMT
      Server:
      - openresty
      Cache-Control:
      - public, max-age=23347
      X-Memc:
      - HIT
      X-Memc-Key:
      - f251a78d142582f39053fe7b40cc1c61
      X-Memc-Age:
      - '7272'
      X-Memc-Expires:
      - '18379'
      Etag:
      - W/"08396b520a145216190417977d4b0d39"
      Vary:
      - Accept-Encoding
      - Origin
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 8668391dce76a5e01d23980e8e8d3454.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - MSP50-P2
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - 1FdGEJDWGRIbpTmhqMZSnZ_eQ2NJvA2S9v3xB-gcjzoDMfPV7uJQcg==
      Age:
      - '6562'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 12 May 2023 21:09:07 GMT
recorded_with: VCR 6.1.0
