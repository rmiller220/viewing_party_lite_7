---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?query=The%20Matrix
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Content-Type:
      - application/json
      User-Agent:
      - Faraday v2.7.4
      Authorization:
      - Bearer <MOVIES_API_READ_ACCESS_TOKEN>
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Tue, 23 May 2023 23:16:52 GMT
      Server:
      - openresty
      Cache-Control:
      - public, max-age=24236
      X-Memc:
      - HIT
      X-Memc-Key:
      - f251a78d142582f39053fe7b40cc1c61
      X-Memc-Age:
      - '7770'
      X-Memc-Expires:
      - '20885'
      Etag:
      - W/"5d64e2f41b0d3649dd653dba1547030c"
      Vary:
      - Accept-Encoding
      - Origin
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 9204cf44179493ed42c678800a26918a.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - p1HuL6lpboX6OgquNj5vvgmL5dP6e8MaWfWqqOvbpqef0_TNuCdS5w==
      Age:
      - '3'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 23 May 2023 23:16:55 GMT
recorded_with: VCR 6.1.0
