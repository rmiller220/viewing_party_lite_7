---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?query=The%20Matrix
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Content-Type:
      - application/json
      User-Agent:
      - Faraday v2.7.4
      Authorization:
      - Bearer <MOVIES_API_READ_ACCESS_TOKEN>
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Fri, 12 May 2023 04:22:34 GMT
      Server:
      - openresty
      Cache-Control:
      - public, max-age=25837
      X-Memc:
      - HIT
      X-Memc-Key:
      - f251a78d142582f39053fe7b40cc1c61
      X-Memc-Age:
      - '243'
      X-Memc-Expires:
      - '22287'
      Etag:
      - W/"6c998011c87b619cd18ba6024203921e"
      Vary:
      - Accept-Encoding
      - Origin
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 527b7205cd03db5d60e5a372d52951ee.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - MSP50-P2
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - wP_YOuWA8XxEyZP3Z3kY5ynyeiLIixw8MNw5Cbg6JzRFnvp2Qims0w==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 12 May 2023 04:22:34 GMT
recorded_with: VCR 6.1.0
